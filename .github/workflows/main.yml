# Define el nombre de tu pipeline
name: Flask App CI/CD to AKS

# Define los eventos que activar√°n la pipeline
on:
  push:
    branches:
      - main

# Define las variables de entorno para usar en el pipeline
env:
  DOCKER_USERNAME: ${{ secrets.DOCKERUSERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKERPASSWORD }}
  DOCKER_IMAGE_NAME: flask-app
  K8S_MANIFEST_FILE: k8s-manifest.yaml
  AZURE_RESOURCE_GROUP: rg-tutor-project02
  AZURE_AKS_CLUSTER: cluster-prueba-02

# Define los 'jobs' (tareas) del pipeline
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest

  deploy_to_aks:
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.AZURECLIENTID }}", "clientSecret":"${{ secrets.AZURETENANTID }}", "tenantId":"${{ secrets.AZURETENANTID }}", "subscriptionId":"${{ secrets.AZURESUBSCRIPTIONID }}"}'

      - name: Set up kubernetes context
        uses: azure/aks-set-context@v2
        with:
          resource-group: ${{ env.AZURE_RESOURCE_GROUP }}
          cluster-name: ${{ env.AZURE_AKS_CLUSTER }}

      - name: Deploy to Kubernetes
        uses: azure/k8s-deploy@v4
        with:
          manifests: ${{ env.K8S_MANIFEST_FILE }}
          images: ${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest
